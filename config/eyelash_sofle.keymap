#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <100>;       // 300                   // 0
    trigger-period-ms = <16>;
};

&mmv {
    trigger-period-ms = <16>;
    acceleration-exponent = <0>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_spacebar: mt_spacebar {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SPACEBAR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <225>;
            require-prior-idle-ms = <30>;
        };

        lt_enter: lt_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ENTER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "balanced";
        };

        lt_mod_space: lt_mod_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_MOD_SPACE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "tap-preferred";
        };

        win_ctrl_right: win_ctrl_right {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_RIGHT";
            bindings = <&win_alt_right>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_ctrl_left: win_ctrl_left {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_LEFT";
            bindings = <&win_alt_left>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_ctrl_up: win_ctrl_up {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_UP";
            bindings = <&win_alt_up>, <&kp LC(HOME)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_ctrl_down: win_ctrl_down {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_DOWN";
            bindings = <&win_alt_down>, <&kp LC(END)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        lt_enter_win_l2: lt_enter_win_l2 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ENTER_WIN_L2";
            bindings = <&win_multi_layer_2>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "balanced";
        };

        win_ctrl_del: win_ctrl_del {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_DEL";
            bindings = <&win_alt_del>, <&delete_line>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_ctrl_del_forward: win_ctrl_del_forward {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_DEL_FORWARD";
            bindings = <&win_alt_del_forward>, <&delete_forward_line>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_alt_del: win_alt_del {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_DEL";
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_alt_del_forward: win_alt_del_forward {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_DEL_FORWARD";
            bindings = <&kp DELETE>, <&kp LC(DELETE)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_ctrl_spacebar: win_ctrl_spacebar {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_SPACEBAR";
            bindings = <&win_alt_spacebar>, <&kp LA(SPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LALT)>;
        };

        win_mt_spacebar: win_mt_spacebar {
            compatible = "zmk,behavior-hold-tap";
            label = "WIN_MT_SPACEBAR";
            bindings = <&kp>, <&win_ctrl_spacebar>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
        };

        win_ctrl_leftbracket: win_ctrl_leftbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_LEFTBRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp LA(LEFT)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        win_ctrl_rightbracket: win_ctrl_rightbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_RIGHTBRACKET";
            bindings = <&kp RIGHT_BRACKET>, <&kp LA(RIGHT)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        win_alt_left: win_alt_left {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_LEFT";
            bindings = <&kp LEFT>, <&kp LC(LEFT)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_alt_right: win_alt_right {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_RIGHT";
            bindings = <&kp RIGHT>, <&kp LC(RIGHT)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_alt_up: win_alt_up {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_UP";
            bindings = <&kp UP>, <&kp LC(UP)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_alt_down: win_alt_down {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_DOWN";
            bindings = <&kp DOWN>, <&kp LC(DOWN)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mt_balanced: mt_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_BALANCED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "balanced";
        };

        win_alt_spacebar: win_alt_spacebar {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_SPACEBAR";
            bindings = <&kp SPACE>, <&kp LC(SPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        mt_holdpreferred: mt_holdpreferred {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HOLDPREFERRED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        grave_escape_tilde: grave_escape_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE_TILDE";
            bindings = <&grave_escape_grave>, <&kp TILDE>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
            mods = <(MOD_RSFT)>;
        };

        grave_escape_grave: grave_escape_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE_GRAVE";
            bindings = <&kp ESCAPE>, <&kp GRAVE>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
            mods = <(MOD_LSFT)>;
        };

        win_lalt_mod: win_lalt_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "WIN_LALT_MOD";
            bindings = <&win_alt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };

        mouse_morph_left: mouse_morph_left {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_MORPH_LEFT";
            bindings = <&mmv MOVE_X(-200)>, <&mmv MOVE_X(-600)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mouse_morph_right: mouse_morph_right {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_MORPH_RIGHT";
            bindings = <&mmv MOVE_X(200)>, <&mmv MOVE_X(600)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mouse_morph_down: mouse_morph_down {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_MORPH_DOWN";
            bindings = <&mmv MOVE_Y(200)>, <&mmv MOVE_Y(600)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mouse_morph_up: mouse_morph_up {
            compatible = "zmk,behavior-mod-morph";
            label = "MOUSE_MORPH_UP";
            bindings = <&mmv MOVE_Y(-200)>, <&mmv MOVE_Y(-600)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lt_enter_win_l1: lt_enter_win_l1 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ENTER_WIN_L1";
            bindings = <&win_multi_layer_1>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            require-prior-idle-ms = <10>;
        };

        lt_holdpreferred: lt_holdpreferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_HOLDPREFERRED";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            require-prior-idle-ms = <10>;
        };

        win_alt_mod_morph: win_alt_mod_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_MOD_MORPH";
            bindings = <&win_lalt_mod 0 LALT>, <&kp LEFT_ALT>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RGUI)>;
            mods = <(MOD_LCTL|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RGUI|MOD_LSFT)>;
        };
    };

    macros {
        delete_line: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(HOME)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LS(HOME)>;

            label = "DELETE_LINE";
        };

        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &tog_off 1>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &tog_on 1>;
            label = "BT_WIN";
        };

        delete_forward_line: delete_forward_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(END)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LS(END)>;

            label = "DELETE_FORWARD_LINE";
        };

        win_multi_layer_1: win_multi_layer_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 4 &mo 6>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 4 &mo 6>;

            label = "win_multi_layer_1";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        win_multi_layer_2: win_multi_layer_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 5 &mo 7>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 5 &mo 7>;

            label = "WIN_MULTI_LAYER_2";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        gbp_pound: gbp_pound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "GBP_POUND";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        win_alt: win_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_ALT>,
                <&macro_wait_time 1>,
                <&macro_release>,
                <&kp LSHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LALT>;

            label = "WIN_ALT";
        };

        EUR_euro: EUR_euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;

            label = "EUR_EURO";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        bullet_point: bullet_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;

            label = "BULLET_POINT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        win_minimise: win_minimise {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp DOWN &kp DOWN>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "WIN_MINIMISE";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        win_paste_formatless: win_paste_formatless {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_wait_time 4>,
                <&macro_press>,
                <&kp LG(LALT)>,
                <&macro_wait_time 4>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LG(LALT)>;

            label = "WIN_PASTE_FORMATLESS";
            wait-ms = <0>;
            tap-ms = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mac_cmd-alt-esc {
            bindings = <&kp LG(LA(ESC))>;
            key-positions = <57 56 0>;
            layers = <0>;
        };

        win_gui+ctrl+esc {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <56 57 0>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC-00 {
            bindings = <
&grave_escape_tilde                &kp N1  &kp N2  &kp N3     &kp N4                     &kp N5                    &mouse_morph_up     &kp N6                            &kp N7             &kp N8     &kp N9            &kp N0             &kp MINUS
&kp TAB                            &kp Q   &kp W   &kp E      &kp R                      &kp T                     &mouse_morph_down   &kp Y                             &kp U              &kp I      &kp O             &kp P              &kp BACKSPACE
&kp LEFT_ALT                       &kp A   &kp S   &kp D      &kp F                      &kp G                     &mouse_morph_left   &kp H                             &kp J              &kp K      &kp L             &kp SEMI           &kp APOS
&mt_holdpreferred LSHFT BACKSLASH  &kp Z   &kp X   &kp C      &kp V                      &kp B                     &mouse_morph_right  &kp N                             &kp M              &kp COMMA  &kp DOT           &kp FSLH           &mt_balanced RIGHT_SHIFT EQUAL
&kp C_MUTE                         &mo 9   &mo 3   &kp LCTRL  &lt_holdpreferred 4 ENTER  &mt LEFT_COMMAND SPACE    &mkp MB1            &mt_spacebar RIGHT_COMMAND SPACE  &lt_enter 5 ENTER  &kp DEL    &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "MAC";
        };

        WIN-00 {
            display-name = "WIN";
            bindings = <
&grave_escape_tilde  &kp N1  &kp N2  &kp N3    &kp N4                    &kp N5                      &trans  &kp N6                    &kp N7                    &kp N8      &kp N9                 &kp N0                  &kp MINUS
&kp TAB              &kp Q   &kp W   &kp E     &kp R                     &kp T                       &trans  &kp Y                     &kp U                     &kp I       &kp O                  &kp P                   &win_ctrl_del
&win_alt_mod_morph   &kp A   &kp S   &kp D     &kp F                     &kp G                       &trans  &kp H                     &kp J                     &kp K       &kp L                  &kp SEMI                &kp APOS
&trans               &kp Z   &kp X   &kp C     &kp V                     &kp B                       &trans  &kp N                     &kp M                     &kp COMMA   &kp DOT                &trans                  &trans
&kp C_MUTE           &trans  &trans  &kp LCMD  &lt_enter_win_l1 0 ENTER  &win_mt_spacebar LCTRL 0    &trans  &win_mt_spacebar RCTRL 0  &lt_enter_win_l2 6 ENTER  &kp DELETE  &win_ctrl_leftbracket  &win_ctrl_rightbracket
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        GAME {
            bindings = <
&trans          &trans  &trans  &trans  &trans  &trans       &kp UP     &trans     &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans       &kp DOWN   &trans     &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans       &kp LEFT   &trans     &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans       &kp RIGHT  &trans     &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &kp SPACE    &kp ENTER  &kp SPACE  &trans  &trans  &trans  &trans
            >;

            label = "GAME";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Special {
            bindings = <
&trans  &trans  &trans  &gbp_pound  &EUR_euro  &trans    &trans  &trans  &trans  &bullet_point  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans     &trans    &trans  &trans  &trans  &trans         &trans  &trans
            >;

            label = "SP";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Layer-01 {
            bindings = <
&kp F12  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5    &msc MOVE_Y(15)   &kp F6     &kp F7      &kp F8            &kp F9      &kp F10  &kp F11
&trans   &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans    &msc MOVE_Y(-15)  &kp PG_UP  &trans      &kp UP            &trans      &trans   &kp DELETE
&trans   &trans  &trans     &trans     &trans     &trans    &msc MOVE_X(15)   &kp PG_DN  &kp LEFT    &kp DOWN          &kp RIGHT   &trans   &trans
&trans   &trans  &trans     &trans     &trans     &trans    &msc MOVE_X(-15)  &trans     &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans   &trans
&kp F15  &trans  &trans     &trans     &trans     &trans    &mkp RCLK         &trans     &trans      &trans            &trans      &trans
            >;

            display-name = "L-1";
            sensor-bindings = <&inc_dec_kp LS(LA(C_VOLUME_UP)) LS(LA(C_VOLUME_DOWN))>;
        };

        Layer-02 {
            bindings = <
&kp F12  &bt_mac       &bt BT_SEL 1  &bt_win    &bt BT_SEL 3  &bt BT_SEL 4    &msc MOVE_Y(15)   &kp F6         &kp F7      &kp F8            &kp F9      &kp F10  &kp F11
&trans   &out OUT_TOG  &mkp LCLK     &mkp MCLK  &mkp RCLK     &trans          &msc MOVE_Y(-15)  &kp PAGE_UP    &trans      &kp UP            &trans      &trans   &kp DELETE
&trans   &trans        &trans        &trans     &trans        &trans          &msc MOVE_X(15)   &kp PAGE_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT   &trans   &trans
&trans   &trans        &trans        &trans     &trans        &trans          &msc MOVE_X(-15)  &trans         &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans   &trans
&kp F15  &trans        &trans        &trans     &trans        &trans          &mkp RCLK         &trans         &trans      &trans            &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp LS(LA(C_VOLUME_UP)) LS(LA(C_VOLUME_DOWN))>;
            label = "L-2";
        };

        Layer-Win-01 {
            bindings = <
&trans         &trans  &trans      &trans  &trans                 &trans    &trans            &trans  &trans          &trans          &trans           &trans  &trans
&trans         &trans  &kp LA(F4)  &trans  &trans                 &trans    &trans            &trans  &trans          &win_ctrl_up    &trans           &trans  &win_ctrl_del_forward
&trans         &trans  &trans      &trans  &trans                 &trans    &msc MOVE_X(-15)  &trans  &win_ctrl_left  &win_ctrl_down  &win_ctrl_right  &trans  &trans
&trans         &trans  &trans      &trans  &win_paste_formatless  &trans    &msc MOVE_X(15)   &trans  &win_minimise   &trans          &trans           &trans  &trans
&kp LC(LG(V))  &trans  &trans      &trans  &trans                 &trans    &trans            &trans  &trans          &trans          &trans           &trans
            >;

            label = "L-W-1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Layer-Win-02 {
            label = "L-W-2";
            bindings = <
&trans         &trans  &trans      &trans  &trans                 &trans    &trans            &trans  &trans          &trans          &trans           &trans  &trans
&trans         &trans  &kp LA(F4)  &trans  &trans                 &trans    &trans            &trans  &trans          &win_ctrl_up    &trans           &trans  &win_ctrl_del_forward
&trans         &trans  &trans      &trans  &trans                 &trans    &msc MOVE_X(-15)  &trans  &win_ctrl_left  &win_ctrl_down  &win_ctrl_right  &trans  &trans
&trans         &trans  &trans      &trans  &win_paste_formatless  &trans    &msc MOVE_X(15)   &trans  &win_minimise   &trans          &trans           &trans  &trans
&kp LC(LG(V))  &trans  &trans      &trans  &trans                 &trans    &trans            &trans  &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Layer-03 {
            bindings = <
&tog 1  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &tog 2
&trans  &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &sys_reset  &bootloader    &trans  &soft_off  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans
            >;

            label = "L-3";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NUMPAD {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH        &kp ASTERISK     &kp PERCENT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_7        &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_1        &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SPACE             &kp ENTER              &kp KP_NUMBER_0  &kp COMMA        &kp PERIOD
            >;

            label = "NUM";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer-3 {
            if-layers = <4 5>;
            then-layer = <8>;
        };

        Layer-3-Win {
            if-layers = <6 7>;
            then-layer = <8>;
        };
    };
};
