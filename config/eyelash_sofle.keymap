#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <250>;
    acceleration-exponent = <2>;
    trigger-period-ms = <0>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        mt_spacebar: mt_spacebar {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SPACEBAR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
        };

        lt_enter: lt_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ENTER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "balanced";
        };

        lt_mod_space: lt_mod_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_MOD_SPACE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "tap-preferred";
        };

        ctrl_right: ctrl_right {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_RIGHT";
            bindings = <&kp RIGHT>, <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ctrl_left: ctrl_left {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_LEFT";
            bindings = <&kp LEFT>, <&kp HOME>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ctrl_up: ctrl_up {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_UP";
            bindings = <&kp UP>, <&kp LC(HOME)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ctrl_down: ctrl_down {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_DOWN";
            bindings = <&kp DOWN>, <&kp LC(END)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        lt_enter_win_l2: lt_enter_win_l2 {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ENTER_WIN_L2";
            bindings = <&Win_L2>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
            flavor = "balanced";
        };

        win_ctrl_del: win_ctrl_del {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_DEL";
            bindings = <&win_alt_del>, <&delete_line>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_ctrl_del_forward: win_ctrl_del_forward {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_DEL_FORWARD";
            bindings = <&win_alt_del_forward>, <&delete_forward_line>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        win_alt_del: win_alt_del {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_DEL";
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_alt_del_forward: win_alt_del_forward {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_ALT_DEL_FORWARD";
            bindings = <&kp DELETE>, <&kp LC(DELETE)>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };

        win_ctrl_spacebar: win_ctrl_spacebar {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_SPACEBAR";
            bindings = <&kp SPACE>, <&kp LA(SPACE)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        win_mt_spacebar: win_mt_spacebar {
            compatible = "zmk,behavior-hold-tap";
            label = "WIN_MT_SPACEBAR";
            bindings = <&kp>, <&win_ctrl_spacebar>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            require-prior-idle-ms = <25>;
        };

        win_ctrl_leftbracket: win_ctrl_leftbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_LEFTBRACKET";
            bindings = <&kp LEFT_BRACKET>, <&kp LA(LEFT)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };

        win_ctrl_rightbracket: win_ctrl_rightbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "WIN_CTRL_RIGHTBRACKET";
            bindings = <&kp RIGHT_BRACKET>, <&kp LA(RIGHT)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

    macros {
        delete_line: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(HOME)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LS(HOME)>;

            label = "DELETE_LINE";
        };

        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &tog_off 1>;
            label = "BT_MAC";
        };

        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &tog_on 1>;
            label = "BT_WIN";
        };

        delete_forward_line: delete_forward_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LS(END)>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LS(END)>;

            label = "DELETE_FORWARD_LINE";
        };

        Win_L1: Win_L1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5 &mo 3>;
            label = "WIN_L1";
        };

        Win_L2: Win_L2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mo 5 &mo 4>;
            label = "WIN_L2";
        };
    };

    combos {
        compatible = "zmk,combos";

        mac_cmd-alt-esc {
            bindings = <&kp LG(LA(ESC))>;
            key-positions = <57 56 0>;
            layers = <0>;
        };

        win_gui+ctrl+esc {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <56 57 0>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC-00 {
            bindings = <
&gresc        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5                             &mmv MOVE_UP     &kp N6                            &kp N7             &kp N8     &kp N9            &kp N0             &kp MINUS
&kp TAB       &kp Q   &kp W   &kp E   &kp R      &kp T                              &mmv MOVE_DOWN   &kp Y                             &kp U              &kp I      &kp O             &kp P              &kp BACKSPACE
&kp LEFT_ALT  &kp A   &kp S   &kp D   &kp F      &kp G                              &mmv MOVE_LEFT   &kp H                             &kp J              &kp K      &kp L             &kp SEMI           &kp APOS
&kp LSHFT     &kp Z   &kp X   &kp C   &kp V      &kp B                              &mmv MOVE_RIGHT  &kp N                             &kp M              &kp COMMA  &kp DOT           &kp FSLH           &kp EQUAL
&kp C_MUTE    &mo 7   &mo 2   &mo 3   &kp LCTRL  &mt_spacebar LEFT_COMMAND SPACE    &mkp MB1         &mt_spacebar RIGHT_COMMAND SPACE  &lt_enter 4 ENTER  &mo 4      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "MAC";
        };

        WIN-00 {
            display-name = "WIN";
            bindings = <
&gresc        &kp N1  &kp N2  &kp N3   &kp N4        &kp N5                      &trans  &kp N6                    &kp N7                    &kp N8     &kp N9                 &kp N0                  &kp MINUS
&kp TAB       &kp Q   &kp W   &kp E    &kp R         &kp T                       &trans  &kp Y                     &kp U                     &kp I      &kp O                  &kp P                   &win_ctrl_del
&kp LEFT_ALT  &kp A   &kp S   &kp D    &kp F         &kp G                       &trans  &kp H                     &kp J                     &kp K      &kp L                  &kp SEMI                &kp APOS
&kp LSHFT     &kp Z   &kp X   &kp C    &kp V         &kp B                       &trans  &kp N                     &kp M                     &kp COMMA  &kp DOT                &kp FSLH                &kp EQUAL
&kp C_MUTE    &trans  &trans  &Win_L1  &kp LEFT_GUI  &win_mt_spacebar LCTRL 0    &trans  &win_mt_spacebar RCTRL 0  &lt_enter_win_l2 0 ENTER  &trans     &win_ctrl_leftbracket  &win_ctrl_rightbracket
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Special {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "SP";
            sensor-bindings = <&scroll_encoder>;
        };

        Layer-01 {
            bindings = <
&kp GRAVE  &kp F1  &kp F2     &kp F3     &kp F4     &kp F5    &mmv MOVE_Y(-100)  &kp F6     &kp F7      &kp F8            &kp F9      &kp F10        &kp F11
&trans     &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans    &mmv MOVE_Y(100)   &kp PG_UP  &kp HOME    &kp UP            &kp END     &trans         &kp DELETE
&trans     &trans  &trans     &trans     &trans     &trans    &mmv MOVE_X(-100)  &kp PG_DN  &kp LEFT    &kp DOWN          &kp RIGHT   &trans         &trans
&trans     &trans  &trans     &trans     &trans     &trans    &mmv MOVE_X(100)   &trans     &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp BACKSLASH  &trans
&kp F15    &trans  &trans     &trans     &trans     &trans    &mkp RCLK          &trans     &trans      &trans            &trans      &trans
            >;

            display-name = "L-1";
            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        Layer-02 {
            bindings = <
&kp TILDE  &bt_mac       &bt BT_SEL 1  &bt_win    &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_Y(-100)  &kp F6         &kp F7      &kp F8            &kp F9      &kp F10        &kp F11
&trans     &out OUT_TOG  &mkp LCLK     &mkp MCLK  &mkp RCLK     &trans          &mmv MOVE_Y(100)   &kp PAGE_UP    &kp HOME    &kp UP            &kp END     &trans         &kp DELETE
&trans     &trans        &trans        &trans     &trans        &trans          &mmv MOVE_X(-100)  &kp PAGE_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT   &trans         &trans
&trans     &trans        &trans        &trans     &trans        &trans          &mmv MOVE_X(100)   &trans         &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp BACKSLASH  &trans
&kp F15    &trans        &trans        &trans     &trans        &trans          &mkp RCLK          &trans         &trans      &trans            &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
            label = "L-2";
        };

        Layer-Win {
            bindings = <
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans      &trans      &trans       &trans  &trans
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans      &ctrl_up    &trans       &trans  &win_ctrl_del_forward
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &trans  &ctrl_left  &ctrl_down  &ctrl_right  &trans  &trans
&trans         &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans      &trans      &trans       &trans  &trans
&kp LC(LG(V))  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans      &trans      &trans       &trans
            >;

            label = "L-W";
            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        Layer-03 {
            bindings = <
&tog 1  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR  &bt BT_CLR_ALL  &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &sys_reset  &bootloader    &trans  &soft_off  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans  &trans      &trans         &trans  &trans     &trans  &trans  &trans  &trans
            >;

            label = "L-3";
            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        NUMPAD {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH        &kp ASTERISK     &kp PERCENT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_7        &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                &kp KP_NUMBER_1        &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp SPACE             &kp ENTER              &kp KP_NUMBER_0  &kp COMMA        &kp PERIOD
            >;

            label = "NUM";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer-3 {
            if-layers = <3 4>;
            then-layer = <6>;
        };
    };
};
